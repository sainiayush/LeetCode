/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
    int len(ListNode* head){
        int ans=0;
        
        while(head){
            head=head->next;
            ++ans;
        }
        return ans;
    }
public:
    vector<ListNode*> splitListToParts(ListNode* root, int k) {
        int l=len(root);
        //cout<<l<<"\n";
        vector<ListNode*>ans;
        
        for(int i=0;i<k;++i){
            if(root==nullptr){
                ans.push_back(nullptr);
                continue;
            }
            
            int t=(l/k) + (i<(l%k));
            ans.push_back(root);
            
            for(int i=0;i<t-1;++i)
                root=root->next;
            ListNode *tmp = root->next;
            root->next=nullptr;
            root=tmp;
        }
        return ans;
    }
};
