class Solution {
    const int d[4][2]={{0,1},{1,0},{0,-1},{-1,0}};
public:
    int robotSim(vector<int>& commands, vector<vector<int>>& obstacles) {
        set<pair<int,int>> st;
        for(auto it: obstacles)
            st.insert({it[0], it[1]});
        
        int dir=0, x=0, y=0, ret=0;
        for(auto it: commands){
            if(it==-2)
                dir=(dir+3)%4;
            else if(it==-1)
                dir=(dir+1)%4;
            else{
                for(int i=0; i<it; ++i){
                    int nx=x+d[dir][0];
                    int ny=y+d[dir][1];
                    if(st.count({nx, ny}))
                        break;
                    x=nx;
                    y=ny;
                }
            }
            ret = max(ret, x*x + y*y);
        }
        return ret;
    }
};
