class Solution {
public:
    vector<vector<int>> floodFill(vector<vector<int>>& img, int sr, int sc, int color) {
        if(img[sr][sc]==color)
            return img;
        
        queue<pair<int,int>> q;
        
        q.push({sr, sc});
        
        int val=img[sr][sc];
        int n=img.size(), m=img[0].size();
        int dir[4][2] = {{1,0}, {-1,0}, {0,1}, {0,-1}};
        while(!q.empty()){
            auto [x,y] = q.front();
            q.pop();
            img[x][y]=color;
            
            for(int i=0;i<4;++i){
                int nx = x + dir[i][0], ny = y + dir[i][1];
                
                if(nx>=0 and ny>=0 and nx<n and ny<m and img[nx][ny]==val and img[nx][ny]!=color){
                    q.push({nx, ny});
                }
            }
        }
        return img;
    }
};
