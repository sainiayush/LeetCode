/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int minDiffInBST(TreeNode* root) {
        int res = numeric_limits<int>::max(), prev = numeric_limits<int>::min();
        helper(root, res, prev);
        return res;
    }
private:
    void helper(TreeNode* root,int& res,int& prev){
        if(root){
            helper(root->left, res, prev);
            if(prev != numeric_limits<int>::min())
                res=min(res, root->val - prev);
            prev = root->val;
            helper(root->right, res, prev);
        }
    }
};
