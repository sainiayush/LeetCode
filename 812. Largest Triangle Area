class Solution {
    double d(vector<int>& a,vector<int>& b){
        double x=abs(a[0]-b[0]);
        double y=abs(a[1]-b[1]);
        return sqrt(x*x + y*y);
    }
    double ar(double a, double b, double c){
        double p = (a+b+c)/2;
        return sqrt(p*(p-a)*(p-b)*(p-c));
    }
public:
    double largestTriangleArea(vector<vector<int>>& points) {
        double area=0;
        int n=points.size();
        
        for(int i=0;i<n;++i){
            for(int j=i+1;j<n;++j){
                for(int k=j+1;k<n;++k){
                    double l1 = d(points[i], points[j]);
                    double l2 = d(points[j], points[k]);
                    double l3 = d(points[i], points[k]);
                    double a = ar(l1, l2, l3);
                    if(a>area)
                        area=a;
                }
            }
        }
        return area;
    }
};
