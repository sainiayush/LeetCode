bool sequenceReconstructed(vector<int>& orig, vector<vector<int>>& seq){
  if(len(seq)==0) return false;

  int n=len(orig);
  vector<vi> g(n);
  vec(int, indegree, n);
  for(auto it: seq){
    if(len(it) == 1 && it[0]>n || it[1]<1)
      return false;
    for(int i=0; i+1<len(it); ++i){
      int u=it[i];
      int v=it[i+1];
      if(u > n || u < 1 || v < 1 || v > n)
        return false;
      --u, --v;
      g[u].eb(v);
      indegree[v]++;
    }
  }


  queue<int> q;
  for(int i=0; i<n; ++i)
    if(!indegree[i])
      q.push(i);

  int i=0;
  while(!q.empty()){
    int curr = q.front();
    q.pop();

    if(len(q) > 1)
      return false;
    
    if(curr != orig[i]-1)
      return false;
    ++i;

    for(auto v: g[curr])
      if(!--indegree[v])
        q.push(v);
  }
  return true;
}
