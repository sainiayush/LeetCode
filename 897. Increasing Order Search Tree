/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* increasingBST(TreeNode* root) {
        if(!root)
            return nullptr;
        TreeNode* curr = root, *temp=root;
        stack<TreeNode*> stk;
        
        bool flag=true;
        while(!stk.empty() || temp){
            if(temp){
                stk.push(temp);
                temp=temp->left;
            }
            else{
                TreeNode* top = stk.top();
                stk.pop();
                
                if(flag){
                    curr = root = top;
                    flag=false;
                }
                else{
                    curr->right = top;
                    curr=top;
                    curr->left=nullptr;
                }
                temp = top->right;
            }
        }
        return root;
    }
};
