class Solution {
public:
    int snakesAndLadders(vector<vector<int>>& board) {
        ios::sync_with_stdio(0);
        cin.tie(nullptr);
        vector<int> a, d;
        int n=board.size(), N=n*n, i, j, k=0;
        
        for(i=n-1; ~i; --i)
            if(n-i&1)
                for(j=0; j<n; ++j)
                    a.emplace_back(board[i][j]);
            else
                for(j=n-1; ~j; --j)
                    a.emplace_back(board[i][j]);
        
        d.resize(N,-1);
        d[0]=0;
        queue<int> q{{0}};
        
        while(!q.empty()){
            i=q.front();
            q.pop();
            
            for(j=1; j<=6; ++j)
                if(i+j < N){
                    if(~a[i+j])
                        k=a[i+j]-1;
                    else
                        k=i+j;
                    if(!~d[k])
                        d[k]=d[i]+1, q.emplace(k);
                }
            
        }
        return d[N-1];
    }
};
